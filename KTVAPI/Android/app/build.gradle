plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

Properties properties = new Properties()
InputStream inputStream = project.rootProject.file('gradle.properties').newDataInputStream()
properties.load(inputStream)

android {
    namespace 'io.agora.ktvdemo'
    compileSdk 31

    defaultConfig {
        applicationId "io.agora.ktvdemo"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "TOOLBOX_SERVER_HOST", "\"${properties.getProperty("TOOLBOX_SERVER_HOST", "")}\""
        buildConfigField "String", "AGORA_APP_ID", "\"${properties.getProperty("AGORA_APP_ID", "")}\""
        buildConfigField "String", "AGORA_APP_CERTIFICATE", "\"${properties.getProperty("AGORA_APP_CERTIFICATE", "")}\""
        buildConfigField "String", "RESTFUL_API_KEY", "\"${RESTFUL_API_KEY}\""
        buildConfigField "String", "RESTFUL_API_SECRET", "\"${RESTFUL_API_SECRET}\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }

    signingConfigs {
        release {
            keyAlias "key0"
            keyPassword "123456"
            storeFile file('./keystore/testkey.jks')
            storePassword "123456"
        }
    }

    applicationVariants.configureEach { variant ->
        variant.outputs.configureEach {
            outputFileName = "KTVApiDemo-${versionName}-${variant.buildType.name}-${releaseTime()}.apk"
        }
    }
}

apply from: "${rootDir.absolutePath}/git-hooks.gradle"

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.4.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.4.1'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'com.squareup.okhttp3:okhttp:3.12.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.10.0'
    implementation 'com.github.mrmike:ok2curl:0.8.0'

    // 歌词组件
    implementation 'com.github.AgoraIO-Community:LyricsView:1.1.1-beta.8'
    //
    implementation 'io.agora:authentication:1.6.1'
    // ktvapi
    api project(":lib_ktvapi")
}

static def releaseTime() {
    return new Date().format("yyyyMMdd_HHmmss")
}